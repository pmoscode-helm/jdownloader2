image:
  # -- repository with jdownloader2 image
  repository: jlesage/jdownloader-2
  # -- current version of the image
  tag:
  # -- pull policy
  pullPolicy: Always

myjd:
  # -- (string) if "service.myjd" is enabled, the email address of the myJdownloader account is required
  email: ""
  # -- (string) if "service.myjd" is enabled, the password of the myJdownloader account is required
  password: ""
  # -- use existing myjd secret (its data has to contains the keys: "email" and "password")
  existingSecretName: ""

persistence:
  # -- enable persistence when true
  enabled: false
  # -- default storage size
  size: 20Gi
  # -- accessMode
  accessMode: ReadWriteOnce
  # -- actual storageClass
  storageClass: ""
  # -- use an existing claim
  existingClaim: ""

# -- imagePullSecrets (not needed, if default image is used)
imagePullSecrets: []

# -- @ignore
nameOverride: ""

# -- @ignore
fullnameOverride: ""

serviceAccount:
  # -- enable serviceAccount
  create: true
  # -- add annotations to serviceAccount
  annotations: {}
  # -- name of the serviceAccount (will be generated if empty)
  name: ""

# -- @ignore
podAnnotations: {}

# -- @ignore
podSecurityContext: {}
  # fsGroup: 2000

# -- @ignore
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- enable the web interface (via browser)
  web:
    # -- enable "web" service
    enabled: true
    # -- exposed port of the service
    port: 5800
    # -- service type (only used when ingress.enabled: false)
    type: LoadBalancer
  # -- enable VNC connection (via VNC client)
  vnc:
    # -- enable "VNC" service
    enabled: false
    # -- exposed port of the service
    port: 5900
  # -- enable my.jdownloader.org remote connection
  myjd:
    # -- enable "myJD" service
    enabled: false
    # -- exposed port of the service
    port: 3129

# -- Configure ingress for the "web" service. Only considered, if "service.web" is enabled
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- @ignore
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- @ignore
nodeSelector: {}

# -- @ignore
tolerations: []

# -- @ignore
affinity: {}
